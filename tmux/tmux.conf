set -s escape-time 0

# terminal properties
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -ga terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
set -ga terminal-features ",*256color*:RGB"
set -ga terminal-features ",xterm-ghostty:RGB:sync:hyperlinks:osc7"
set -ga terminal-features ",*:usstyle"

# Set mouse support
set -g mouse on

# Set focus-events on (important for Neovim autoread)
set -g focus-events on

# Set windows and pane index at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind P paste-buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

set -g prefix C-Space
unbind-key C-b
bind-key C-Space send-prefix

set -g allow-rename off
set -g mouse on
set-option -g allow-passthrough on

# Movements
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n C-h if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

# bind-key -n S-Down if-shell "$is_vim" 'send-keys S-Down' 'resize-pane -D 3'
# bind-key -n S-Left if-shell "$is_vim" 'send-keys S-Left' 'resize-pane -L 3'
# bind-key -n S-Right if-shell "$is_vim" 'send-keys S-Right' 'resize-pane -R 3'
# bind-key -n S-Up if-shell "$is_vim" 'send-keys S-Up' 'resize-pane -U 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Quickly Clear History
# bind-key C if-shell "$is_vim" 'display-message "cannot clear"' 'send-keys "clear && tmux clear-history" Enter'
bind-key C if-shell "$is_vim" 'display-message "cannot clear"' 'send-keys -R; clear-history; send-keys "Enter"'

# Toggle status bar
bind-key S if -F '#{==:#{status},off}' 'set -g status on' 'set -g status off'

# Toggle terminal
bind ` if-shell "test $(tmux list-panes | wc -l) -eq 1" "split-window -v" "select-pane -t:.+"

# Quickly Reload
bind r source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded"

# Status Bar
set -g status off # turn it off by default

set -g status-interval 15 #could speed this up to 1
set -g status-justify left # absolute-centre
set -g status-position top

set -g status-right 'ÓØà #(echo #{pane_current_path} | sed "s#$HOME#~#g")  '
set -g status-left-length 100
set -g status-left ''

set -g status-style 'bg=default, fg=white'
set -g pane-border-style 'bg=default fg=#414559'
set -g pane-active-border-style 'bg=default fg=cyan'

set -g automatic-rename on

set -g window-status-current-format '  #[fg=cyan]#I Ó™Ö #{pane_current_command}'
set -g window-status-format '  #[fg=black]#I ÔÑ† #{pane_current_command}'

set -g window-status-separator ' '

# Window split
unbind '"'
unbind %
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Session Manager
unbind "k"

# bind-key "k" run-shell "sesh connect \"$(
#   sesh list --icons | fzf-tmux -p 60%,40% \
#     --reverse --no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
#     --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
#     --bind 'tab:down,btab:up' \
#     --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list --icons)' \
#     --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t --icons)' \
#     --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c --icons)' \
#     --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z --icons)' \
#     --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
#     --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(‚ö°  )+reload(sesh list --icons)' \
# )\""

set -g popup-border-style fg=cyan
set -g popup-border-lines rounded

bind-key "k" display-popup -E -w 80 -h 30 "sesh connect \"$(
 sesh list -i | gum filter --limit 1 --no-sort --fuzzy --placeholder 'Pick a sesh' --height 30 --prompt='‚ö°'
)\""
